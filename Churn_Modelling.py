# -*- coding: utf-8 -*-
"""el ragl hayseb bank wala la2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-Ws_Bh8pbBxcGJT3MBoWM4UVp3j3otaU

importing elawl
"""

import numpy as np
import pandas as pd
import tensorflow as tf

"""ba-upload el dataset w ba3deen basheil el features ely malhash lazma
x---> rows
y---> el egaba(so2al da binary)
"""

dataset = pd.read_csv('Churn_Modelling.csv')
x= dataset.iloc[:, 3:-1].values
y=dataset.iloc[:,-1].values

print(x)

"""el egabat"""

print(y)

"""bahawl gender wel kalam da le labels (0,1) 3lshan comp yefhm
1---> male
0---> female
"""

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
x[:,2]= le.fit_transform(x[:,2])

print(x)

"""bahawl el belad le labels 

"""

from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder
ct= ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [1])], remainder='passthrough')
x=np.array(ct.fit_transform(x))

print(x)

"""splitting data 20%test 80%train"""

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.2,random_state=0)

"""feature scaling 3lshan comp yefham"""

from sklearn.preprocessing import StandardScaler
sc=StandardScaler()
x_train=sc.fit_transform(x_train)
x_test=sc.transform(x_test)

"""bygahez el model nafso"""

ann=tf.keras.models.Sequential()

"""b3ml input layer wel hidden layer
3adad el units =6 dy habdaya rewsha
"""

ann.add(tf.keras.layers.Dense(units=6, activation='relu'))
ann.add(tf.keras.layers.Dense(units=6, activation='relu'))

"""b3ml output layer
units=1 3lshan binary
sigmoid 3lshan binary
"""

ann.add(tf.keras.layers.Dense(units=1, activation='sigmoid'))

ann.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

ann.fit(x_train,y_train, batch_size=32, epochs=100)

"""da kan example bngrabo"""

print(ann.predict(sc.transform([[1,0,0,600,1,40,3,60000,2,1,1,50000]])) > 0.5)

"""exit>0.5
stay<0.5 w b3den bykaren maben its prediction wel real answer

"""

y_pred=ann.predict(x_test)
y_pred=(y_pred>0.5)
print(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))

"""kam wahda sah w 8alat wel accuracy"""

from sklearn.metrics import confusion_matrix, accuracy_score
cm=confusion_matrix(y_test,y_pred)
print(cm)
accuracy_score(y_test,y_pred)















